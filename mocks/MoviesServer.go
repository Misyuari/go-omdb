// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	proto "github.com/misyuari/go-omdb/domain/movie/delivery/grpc/proto"
	mock "github.com/stretchr/testify/mock"
)

// MoviesServer is an autogenerated mock type for the MoviesServer type
type MoviesServer struct {
	mock.Mock
}

// Detail provides a mock function with given fields: _a0, _a1
func (_m *MoviesServer) Detail(_a0 context.Context, _a1 *proto.MovieRequestDetail) (*proto.MovieDetail, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *proto.MovieDetail
	if rf, ok := ret.Get(0).(func(context.Context, *proto.MovieRequestDetail) *proto.MovieDetail); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*proto.MovieDetail)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *proto.MovieRequestDetail) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// List provides a mock function with given fields: _a0, _a1
func (_m *MoviesServer) List(_a0 context.Context, _a1 *proto.MovieRequestList) (*proto.MovieList, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *proto.MovieList
	if rf, ok := ret.Get(0).(func(context.Context, *proto.MovieRequestList) *proto.MovieList); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*proto.MovieList)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *proto.MovieRequestList) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
